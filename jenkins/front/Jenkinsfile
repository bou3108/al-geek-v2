pipeline {
  agent any 
  tools {
    maven 'M3'
  }
  stages {
    stage('checkout') {
      steps {
        git 'https://github.com/oville92/al-geek-v2.git'
      }
    }
    stage ('Package dto library') {
		steps {
				echo "=== Packaging al-geek-dto library ==="
                sh 'mvn -f libraries/al-geek-dto clean install -DskipTests'
        }
    }
    stage ('Package rest library') {
		steps {
				echo "=== Packaging al-geek-rest library ==="
                sh 'mvn -f libraries/al-geek-rest clean install -DskipTests'
        }
    }
    stage ('Package al-geek-front application') {
		steps {
				echo "=== Packaging al-geek-front application ==="
                sh 'mvn -f front/al-geek-front clean package -DskipTests'
        }
    }   
    stage ('Create al-geek-front package') {
		steps {
				echo "=== Packaging al-geek-front application ==="
				sh 'rm -rf front-client'
				sh 'mkdir front-client'
                sh 'cp front/al-geek-front/target/al-geek-front*.jar front-client/front.jar'
				sh 'cp docker/front/* front-client'
        }
    }   
    stage ('Publish package through SSH') {
        steps{
            script {
				sshPublisher(publishers: [
					sshPublisherDesc(configName: 'aws-front-host', transfers: [
						sshTransfer(
							execCommand: '''
								echo "Docker Clean Up";
                                sudo docker stop front-cont || true;
                                sudo docker rm front-cont || true;
                                sudo docker rmi front-img || true;
                                sudo rm -rf front-client || true;
                                mkdir front-client
                                '''
                        ),
						sshTransfer(
							sourceFiles: "front-client/*",
							execCommand: '''
							    ls -l /home/ec2-user
							'''
                        ),
						sshTransfer(
							execCommand: '''
								cd front-client;
								sudo docker build -t front-img .;
								sudo docker run -d --name front-cont --env-file env.front -p 80:80 front-img;
								ls -l /home/ec2-user/front-client;
							'''
                        )
                    ])
                ])
            }
        }
    }

  }
}