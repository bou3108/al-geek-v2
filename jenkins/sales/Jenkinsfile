pipeline {
  agent any 
  tools {
    maven 'M3'
  }
  stages {
    stage('checkout') {
      steps {
        git 'https://github.com/oville92/al-geek-v2.git'
      }
    }
    stage ('Package dto library') {
		steps {
				echo "=== Packaging al-geek-dto library ==="
                sh 'mvn -f libraries/al-geek-dto clean install -DskipTests'
        }
    }
    stage ('Package rest library') {
		steps {
				echo "=== Packaging al-geek-rest library ==="
                sh 'mvn -f libraries/al-geek-rest clean install -DskipTests'
        }
    }
    stage ('Package sales-orchestrator application') {
		steps {
				echo "=== Packaging sales-orchestrator application ==="
                sh 'mvn -f business/sales-orchestrator clean package -DskipTests'
        }
    }   
    stage ('Create sales package') {
		steps {
				echo "=== Packaging sales-orchestrator application ==="
				sh 'rm -rf sales'
				sh 'mkdir sales'
                sh 'cp business/sales-orchestrator/target/sales-orchestrator*.jar sales/sales.jar'
				sh 'cp docker/sales/* sales'
        }
    }   
    stage ('Publish package through SSH') {
        steps{
            script {
				sshPublisher(publishers: [
					sshPublisherDesc(configName: 'aws-sales-host', transfers: [
						sshTransfer(
							execCommand: '''
								echo "Docker Clean Up";
                                sudo docker stop sales-cont || true;
                                sudo docker rm sales-cont || true;
                                sudo docker rmi sales-img || true;
                                sudo rm -rf sales || true;
                                mkdir sales
                                '''
                        ),
						sshTransfer(
							sourceFiles: "sales/*",
							execCommand: '''
							    ls -l /home/ec2-user
							'''
                        ),
						sshTransfer(
							execCommand: '''
								cd sales;
								sudo docker build -t sales-img .;
								sudo docker run -d --name sales-cont --env-file env.sales -p 8580:8580 sales-img;
								ls -l /home/ec2-user/sales;
							'''
                        )
                    ])
                ])
            }
        }
    }

  }
}